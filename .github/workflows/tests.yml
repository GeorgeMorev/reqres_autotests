name: Run tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest

      - name: Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y default-jdk unzip wget
          wget https://github.com/allure-framework/allure2/releases/download/2.21.0/allure-2.21.0.zip
          unzip allure-2.21.0.zip -d /opt/
          echo "/opt/allure-2.21.0/bin" >> $GITHUB_PATH

      - name: Run tests with Allure results
        run: |
          pytest --alluredir=reports/allure-results

      - name: Generate Allure report
        run: allure generate reports/allure-results -o reports/allure-report --clean



      - name: Upload Allure results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: reports/allure-report

      - name: Send Telegram Notification
        if: always()
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
            STATUS="${{ job.status }}"
            REPO="${{ github.repository }}"
            BRANCH="${{ github.ref_name }}"
            COMMIT_AUTHOR="${{ github.actor }}"
            COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
            REPORT_URL="https://georgemorev.github.io/reqres_autotests/"
            
            TEXT="‚úÖ *–¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã*\n\nüì¶ *–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:* $REPO\nüåø *–í–µ—Ç–∫–∞:* $BRANCH\nüë§ *–ê–≤—Ç–æ—Ä:* $COMMIT_AUTHOR\nüí¨ *–ö–æ–º–º–∏—Ç:* $COMMIT_MESSAGE\nüìä *–°—Ç–∞—Ç—É—Å:* $STATUS"
            
            if [[ "$BRANCH" == "main" || "$BRANCH" == "develop" ]]; then
              TEXT="$TEXT\n\nüìé [–û—Ç–∫—Ä—ã—Ç—å Allure-–æ—Ç—á—ë—Ç]($REPORT_URL)"
            fi
            
            curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage \
              -H "Content-Type: application/json" \
              -d "{\"chat_id\": \"${TELEGRAM_CHAT_ID}\", \"text\": \"${TEXT}\", \"parse_mode\": \"Markdown\"}"

  deploy-report:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download Allure report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: report-to-publish

      - name: Setup Git user for deployment
        run: |
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: report-to-publish
          publish_branch: gh-pages